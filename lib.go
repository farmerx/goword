// Copyright 2021 - 2021 The goword Authors. All rights reserved. Use of
// this source code is governed by a MIT license that can be found in
// the LICENSE file.
//
// Package goword providing a set of functions that allow you to write to
// and read from DOCX files. Supports reading and writing
// wordprocessing documents generated by Microsoft Wordâ„¢ 2007 and later.
// This library needs Go version 1.15 or later.

package goword

import (
	"archive/zip"
	"bytes"
	"io"
	"strings"
)

// ReadZipReader can be used to read the wordprocessing in memory without touching the
// filesystem.
func ReadZipReader(r *zip.Reader) (map[string][]byte, error) {
	var err error
	var docPart = map[string]string{
		"[content_types].xml": "[Content_Types].xml",
	}
	fileList := make(map[string][]byte, len(r.File))
	for _, v := range r.File {
		fileName := strings.Replace(v.Name, "\\", "/", -1)
		if partName, ok := docPart[strings.ToLower(fileName)]; ok {
			fileName = partName
		}
		if fileList[fileName], err = readFile(v); err != nil {
			return nil, err
		}
	}
	return fileList, nil
}

// Read file content as string in a archive file.
func readFile(file *zip.File) ([]byte, error) {
	rc, err := file.Open()
	if err != nil {
		return nil, err
	}
	defer rc.Close()
	dat := make([]byte, 0, file.FileInfo().Size())
	buff := bytes.NewBuffer(dat)
	if _, err := io.Copy(buff, rc); err != nil {
		return nil, err
	}
	return buff.Bytes(), nil
}
